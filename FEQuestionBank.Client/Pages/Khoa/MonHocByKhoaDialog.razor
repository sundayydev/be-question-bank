@using BeQuestionBank.Shared.DTOs.MonHoc
@using FEQuestionBank.Client.Services
@using MudBlazor

<MudDialog MaxWidth="MaxWidth.Medium" FullWidth="true">
    <TitleContent>
        <MudText Typo="Typo.h6" Class="font-weight-bold mb-2">Danh sách Môn Học của Khoa @TenKhoa</MudText>
    </TitleContent>

    <DialogContent>
        <MudTable Items="@MonHocs"
                  Bordered="true"
                  Hover="true"
                  Striped="true"
                  Dense="false"
                  Class="w-full text-base">

            <HeaderContent>
                <MudTh>Mã Số Môn Học</MudTh>
                <MudTh>Tên Môn Học</MudTh>
                <MudTh Style="text-align:center;">Trạng Thái</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd>@context.MaSoMonHoc</MudTd>
                <MudTd>@context.TenMonHoc</MudTd>
                <MudTd Style="text-align:center;">
                    <MudChip T="string" Color="@(context.XoaTam == true ? Color.Error : Color.Success)">
                        @(context.XoaTam == true ? "Đã xóa tạm" : "Hoạt động")
                    </MudChip>
                </MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <MudText>Không tìm thấy môn học nào cho khoa này</MudText>
            </NoRecordsContent>

            <LoadingContent>
                <MudText>Đang tải dữ liệu...</MudText>
            </LoadingContent>
        </MudTable>
    </DialogContent>

    <DialogActions>
        <div class="p-3">
            <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Filled">
                Đóng
            </MudButton>
        </div>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public Guid MaKhoa { get; set; }
    [Parameter] public string TenKhoa { get; set; } = string.Empty;
    [Inject] private IMonHocApiClient MonHocApiClient { get; set; } = default!;
    [Inject] private ISnackbar Snackbar { get; set; } = default!;

    private List<MonHocDto> MonHocs { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await MonHocApiClient.GetMonHocsByMaKhoaAsync(MaKhoa.ToString());
            if (response.Success && response.Data != null)
            {
                MonHocs = response.Data;
            }
            else
            {
                Snackbar.Add($"Không tìm thấy môn học: {response.Message}", Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Lỗi khi tải môn học: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}