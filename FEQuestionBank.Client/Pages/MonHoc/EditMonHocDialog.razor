@using BeQuestionBank.Shared.DTOs.MonHoc
@using BeQuestionBank.Shared.DTOs.Khoa
@using MudBlazor

<MudDialog FullWidth="true">
    <TitleContent>
        <MudText Typo="Typo.h6">@_dialogTitle</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Label="Mã Số Môn Học" 
                      @bind-Value="MonHoc.MaSoMonHoc" 
                      Variant="Variant.Outlined"
                      Required="true"
                      ErrorText="Mã số môn học là bắt buộc" />

        <MudTextField Label="Tên Môn Học" 
                      @bind-Value="MonHoc.TenMonHoc" 
                      Variant="Variant.Outlined"
                      Required="true"
                      ErrorText="Tên môn học là bắt buộc" />

        <MudSelect Label="Khoa" 
                   @bind-Value="MonHoc.MaKhoa" 
                   Variant="Variant.Outlined"
                   Required="true"
                   ErrorText="Khoa là bắt buộc">
            @foreach (var khoa in Khoas)
            {
                <MudSelectItem Value="@khoa.MaKhoa">@khoa.TenKhoa</MudSelectItem>
            }
        </MudSelect>

        <MudCheckBox T="bool?" Label="Xóa Tạm" @bind-Checked="MonHoc.XoaTam" />

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Text">
            Đóng
        </MudButton>
        <MudButton OnClick="Submit" Color="Color.Primary" Variant="Variant.Filled"
                   Disabled="@(string.IsNullOrWhiteSpace(MonHoc.TenMonHoc) || string.IsNullOrWhiteSpace(MonHoc.MaSoMonHoc) || MonHoc.MaKhoa == Guid.Empty)">
            Lưu
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public MonHocDto MonHoc { get; set; } = new() { MaSoMonHoc = "" };
    [Parameter] public string DialogTitle { get; set; } = string.Empty;
    [Parameter] public List<KhoaDto> Khoas { get; set; } = new();
    [Parameter] public EventCallback<MonHocDto> OnSave { get; set; }

    private string _dialogTitle = string.Empty;

    protected override void OnParametersSet()
    {
        _dialogTitle = DialogTitle;
    }

    private async Task Submit()
    {
        if (string.IsNullOrWhiteSpace(MonHoc.TenMonHoc) || string.IsNullOrWhiteSpace(MonHoc.MaSoMonHoc) || MonHoc.MaKhoa == Guid.Empty)
        {
            return;
        }
        await OnSave.InvokeAsync(MonHoc);
        MudDialog.Close(DialogResult.Ok(MonHoc));
    }

    private void Cancel() => MudDialog.Cancel();
}