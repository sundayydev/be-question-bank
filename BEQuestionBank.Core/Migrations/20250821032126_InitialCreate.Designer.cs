// <auto-generated />
using System;
using BeQuestionBank.Core.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BEQuestionBank.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250821032126_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Property<Guid>("MaCauHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("CLO")
                        .HasColumnType("integer");

                    b.Property<short>("CapDo")
                        .HasColumnType("smallint");

                    b.Property<float?>("DoPhanCach")
                        .HasColumnType("real")
                        .HasColumnName("DoPhanCachCauHoi");

                    b.Property<bool>("HoanVi")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MaCauHoiCha")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaPhan")
                        .HasColumnType("uuid");

                    b.Property<int?>("MaSoCauHoi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("NguoiTao")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoCauHoiCon")
                        .HasColumnType("integer");

                    b.Property<int?>("SoLanDung")
                        .HasColumnType("integer");

                    b.Property<int?>("SoLanDuocThi")
                        .HasColumnType("integer");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean");

                    b.HasKey("MaCauHoi");

                    b.HasIndex("MaCauHoiCha");

                    b.HasIndex("MaPhan");

                    b.ToTable("CauHoi");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Property<Guid>("MaCauTraLoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("HoanVi")
                        .HasColumnType("boolean");

                    b.Property<bool>("LaDapAn")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaCauTraLoi");

                    b.HasIndex("MaCauHoi");

                    b.ToTable("CauTraLoi");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.Property<Guid>("MaDeThi")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaPhan")
                        .HasColumnType("uuid");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("integer");

                    b.HasKey("MaDeThi", "MaCauHoi");

                    b.HasIndex("MaCauHoi");

                    b.HasIndex("MaPhan");

                    b.ToTable("ChiTietDeThi");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Property<Guid>("MaDeThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("DaDuyet")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoCauHoi")
                        .HasColumnType("integer");

                    b.Property<string>("TenDeThi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaDeThi");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("DeThis");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.File", b =>
                {
                    b.Property<Guid>("MaFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("LoaiFile")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MaCauHoi")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MaCauTraLoi")
                        .HasColumnType("uuid");

                    b.Property<string>("TenFile")
                        .HasColumnType("text");

                    b.HasKey("MaFile");

                    b.HasIndex("MaCauHoi");

                    b.HasIndex("MaCauTraLoi");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Property<Guid>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamKhoa");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Property<Guid>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaKhoa")
                        .HasColumnType("uuid");

                    b.Property<string>("MaSoMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoTinChi")
                        .HasColumnType("integer");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamMonHoc");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaKhoa");

                    b.HasIndex("MaSoMonHoc")
                        .IsUnique();

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("BiKhoa")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MaKhoa")
                        .HasColumnType("uuid");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgayDangNhapCuoi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VaiTro")
                        .HasColumnType("integer");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MaKhoa");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.Phan", b =>
                {
                    b.Property<Guid>("MaPhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("LaCauHoiNhom")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MaPhanCha")
                        .HasColumnType("uuid");

                    b.Property<int?>("MaSoPhan")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MonHocMaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<int>("SoLuongCauHoi")
                        .HasColumnType("integer");

                    b.Property<string>("TenPhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThuTu")
                        .HasColumnType("integer");

                    b.Property<bool?>("XoaTam")
                        .HasColumnType("boolean")
                        .HasColumnName("XoaTamPhan");

                    b.HasKey("MaPhan");

                    b.HasIndex("MaPhanCha");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("Phan");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.YeuCauRutTrich", b =>
                {
                    b.Property<Guid>("MaYeuCau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("DaXuLy")
                        .HasColumnType("boolean");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<Guid>("MaMonHoc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaNguoiDung")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NgayYeuCau")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDungRutTrich")
                        .HasColumnType("text");

                    b.HasKey("MaYeuCau");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("YeuCauRutTrich");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.CauHoi", "CauHoiCha")
                        .WithMany("CauHoiCons")
                        .HasForeignKey("MaCauHoiCha")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("MaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoiCha");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("MaCauHoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoi");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.ChiTietDeThi", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("MaCauHoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeQuestionBank.Domain.Models.DeThi", "DeThi")
                        .WithMany("ChiTietDeThis")
                        .HasForeignKey("MaDeThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeQuestionBank.Domain.Models.Phan", "Phan")
                        .WithMany()
                        .HasForeignKey("MaPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauHoi");

                    b.Navigation("DeThi");

                    b.Navigation("Phan");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.File", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("MaCauHoi");

                    b.HasOne("BeQuestionBank.Domain.Models.CauTraLoi", "CauTraLoi")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("MaCauTraLoi");

                    b.Navigation("CauHoi");

                    b.Navigation("CauTraLoi");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany("MonHocs")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.NguoiDung", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.Khoa", "Khoa")
                        .WithMany()
                        .HasForeignKey("MaKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.Phan", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.Phan", "PhanCha")
                        .WithMany("PhanCon")
                        .HasForeignKey("MaPhanCha");

                    b.HasOne("BeQuestionBank.Domain.Models.MonHoc", null)
                        .WithMany("Phans")
                        .HasForeignKey("MonHocMaMonHoc");

                    b.Navigation("PhanCha");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.YeuCauRutTrich", b =>
                {
                    b.HasOne("BeQuestionBank.Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeQuestionBank.Domain.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauHoi", b =>
                {
                    b.Navigation("CauHoiCons");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.CauTraLoi", b =>
                {
                    b.Navigation("FileDinhKems");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.DeThi", b =>
                {
                    b.Navigation("ChiTietDeThis");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.Khoa", b =>
                {
                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.MonHoc", b =>
                {
                    b.Navigation("Phans");
                });

            modelBuilder.Entity("BeQuestionBank.Domain.Models.Phan", b =>
                {
                    b.Navigation("PhanCon");
                });
#pragma warning restore 612, 618
        }
    }
}
